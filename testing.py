# -*- coding: utf-8 -*-
"""DS assignment part 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JF-3Vwyl9lE-WC6m2EKmKEvqfUHkceuF
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Load New Dataset
new_data = pd.read_csv('ds assignment prediction.csv')
new_data.head()

#Set Car as Index
new_data_process = new_data.set_index('Brand')

"""Create dummy"""

#Create dummy variables for categorical variable
new_data_dummy = pd.get_dummies(new_data_process)
new_data_dummy = pd.get_dummies(new_data_process,drop_first=True)
new_data_dummy.head()

#Call input variable --must same the column name as save model
input_new = new_data_dummy[['HP', 'CC', 'FuelType_Diesel', 'FuelType_Petrol']]
#input_new = new_data_dummy[['KM', 'HP', 'FuelType_Diesel', 'FuelType_Petrol']]
input_new.head()

#Feature Scalling
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
scaler.fit(input_new)
input_new = scaler.transform(input_new)#set the variable after feature scalling

input_new

#Load Saved Model
import pickle

filename = 'car price test'

loaded_model = pickle.load(open(filename,'rb')) #rb - read binary same as open model/file

#Predict
import statsmodels.api as sm
input_new = sm.add_constant(input_new)
predict_output = loaded_model.predict(input_new)#use the feature scalling variable to predict using save model
predict_output = pd.DataFrame({'Predicted Price':predict_output}) #Create Data Frame

predict_output.head()

#Create dataframe

new_predict = pd.concat([new_data,predict_output], axis = 1)

new_predict.head()

new_predict.to_csv('new_predict_pr.csv',index=False)

